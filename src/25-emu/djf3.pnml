//Begin DJF3


// Graphics

// Purchase Menu
spriteset (spriteset_djf3_purchase_original, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_purchase ("25-emu/djf3", "djf3-tc")
}

// Vehicle
spriteset (spriteset_djf3_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/djf3", "djf3-tc")
}
spriteset (spriteset_djf3_middle_m, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/djf3", "djf3-m")
}
spriteset (spriteset_djf3_middle_tp1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/djf3", "djf3-tp1")
}
spriteset (spriteset_djf3_middle_tp2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/djf3", "djf3-tp2")
}
spriteset (spriteset_djf3_middle_tp1_r, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/djf3", "djf3-tp1")
}
spriteset (spriteset_djf3_middle_tp2_r, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/djf3", "djf3-tp2")
}
spriteset (spriteset_djf3_cab, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/djf3", "djf3-tc")
}

switch (FEAT_TRAINS, SELF, switch_djf3_articulated_part, extra_callback_info1) {
    1..2: return djf3;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, switch_djf3_graphics, position_in_articulated_veh % 3) {
    1: spriteset_djf3_front;
    empty_sprites;
}

switch (FEAT_TRAINS, SELF, switch_djf3_head_capacity, position_in_articulated_veh % 3) {
    1: return 64;
    return 0;
}



switch (FEAT_TRAINS, SELF, switch_djf3_middle_tps_gfx_back, (position_in_consist_from_end / 3) + 1) {
    2: spriteset_djf3_middle_tp1_r;
    3: spriteset_djf3_middle_tp2;
    spriteset_djf3_middle_m;
}

switch (FEAT_TRAINS, SELF, switch_djf3_middle_tps_gfx_front, (position_in_consist / 3) + 1) {
    2: spriteset_djf3_middle_tp1;
    3: spriteset_djf3_middle_tp2_r;
    switch_djf3_middle_tps_gfx_back;
}


switch (FEAT_TRAINS, SELF, switch_djf3_cab_graphics, position_in_consist_from_end / 3) {
    0: spriteset_djf3_cab;
    switch_djf3_middle_tps_gfx_front;
}

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_graphics, position_in_articulated_veh % 3) {
    1: switch_djf3_cab_graphics;
    empty_sprites;
}



//Cap
switch (FEAT_TRAINS, SELF, switch_djf3_middle_capacity_1, vehicle_type_id) {
    1024: return 76;
}

switch (FEAT_TRAINS, SELF, switch_djf3_middle_capacity, position_in_articulated_veh % 3) {
    1: switch_djf3_middle_capacity_1;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_djf3_cab_capacity_1, vehicle_type_id) {
    1024: return 64;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_djf3_cab_capacity, position_in_articulated_veh % 3) {
    1: switch_djf3_cab_capacity_1;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_capacity, position_in_consist_from_end) {
    0..2: switch_djf3_cab_capacity;
    switch_djf3_middle_capacity;
}

//Cost

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_running_power, vehicle_type_id) {
    1024: return 63;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_running_unpower, vehicle_type_id) {
    1024: return 9;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_djf3_wagon_running, vehicle_is_potentially_powered) {
    1: switch_djf3_wagon_running_power;
    switch_djf3_wagon_running_unpower;
}


//Power

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_power_back, ((position_in_consist / 3) + 1) % 4) {
    0: return 1421;
    1: return 1421;
    3: return 1421;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_power_front, (position_in_consist / 3) + 1) {
    1: return 1421;
    3: return 1421;
    4: return 1421;
    switch_djf3_wagon_power_back;
}

switch (FEAT_TRAINS, SELF, switch_djf3_wagon_power, (position_in_consist_from_end / 3) + 1) {
    1: return 1421;
    switch_djf3_wagon_power_front;
}


switch (FEAT_TRAINS, SELF, switch_djf3_wagon_traction, vehicle_is_potentially_powered) {
    1: return int(0.1*255);
    return 0;
}


item (FEAT_TRAINS, djf3) {
    property {
        // Menu
        name:                           string(STR_NAME_DJF3);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_MU);
        engine_class:                   ENGINE_CLASS_ELECTRIC;

        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(2003,09,06);
        model_life:                     30;
        retire_early:                   20;
        vehicle_life:                   15;
        track_type:                     SABA;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 1;
        loading_speed:                  8 << param_loading_speed;
        cargo_age_period:               400 << param_cargo_decay;

        // Stats
        speed:                          210 km/h;
        power:                          1060 kW;
        weight:                         53 ton;
        tractive_effort_coefficient:    0.1;
        cost_factor:                    61;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        running_cost_factor:            26;
        reliability_decay:              24;
        bitmask_vehicle_info:           bitmask(2);
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_6, string(STR_DJF3_CAN_ATTACH_WAGON), string(STR_DJF3_CONSIST), string(STR_DJF3_HEAD_SEAT),string(STR_RELDEC_HIGH, 24));
        can_attach_wagon:               onlyzy;
        start_stop:                     mu4to12car;
        // Graphics
        default:                        switch_djf3_graphics;
        purchase:                       spriteset_djf3_purchase_original;
        articulated_part:               switch_djf3_articulated_part;

        // Stats
        length:                         switch_length_2_8_2;
        cargo_capacity:                 switch_djf3_head_capacity;
        cargo_age_period:               100 * cafedecayfactor() << param_cargo_decay;
        cost_factor:                    50;
        running_cost_factor:            (48 + crhspeedcost()) * runningcostfactor() * cafecostfactor() + 20;
        purchase_running_cost_factor:   212;
        purchase_cargo_capacity:        64/3;

    }

    // Multiple Unit Wagons
    livery_override(zymuw) {
        default:                        switch_djf3_wagon_graphics;
        cargo_capacity:                 switch_djf3_wagon_capacity;
        power:                          switch_djf3_wagon_power;
        tractive_effort_coefficient:    switch_djf3_wagon_traction;
        length:                         switch_length_2_8_2;
        weight:                         53;
        can_attach_wagon:               muhead;
        cargo_age_period:               (switch_crh_wagon_cargo_decay() * cafedecayfactor()) << param_cargo_decay;
        bitmask_vehicle_info:           switch_crh_wagon_bitmask;
        articulated_part:               switch_crh_wagon_articulated_part;
        running_cost_factor:            (switch_djf3_wagon_running() + crhspeedcost()) * runningcostfactor() * cafecostfactor() + accostfactor();
    }

}

// End djf3
