//Begin CR400AFAE
switch (FEAT_TRAINS, SELF, switch_cr400afae_name, getbits(extra_callback_info1, 0, 8) == 0x20? getbits(extra_callback_info1, 8, 8) : 0xFFFF) {
    0: return string(STR_CR400AF_SERIES);
    return CB_RESULT_NO_TEXT;
}

//


// Vehicle
spriteset (spriteset_cr400afae_middle_m, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-m")
}
spriteset (spriteset_cr400afae_middle_m_r, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-m-r")
}
spriteset (spriteset_cr400afae_middle_m_reversed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/cr400af-z", "cr400af-ae-m")
}
spriteset (spriteset_cr400afae_middle_m_r_reversed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/cr400af-z", "cr400af-ae-m-r")
}
spriteset (spriteset_cr400afae_middle_m_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-m-c")
}
spriteset (spriteset_cr400afae_middle_m_c_reversed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-m-c-r")
}
spriteset (spriteset_cr400afae_middle_tp, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-tp")
}
spriteset (spriteset_cr400afae_middle_tp_r, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_standard ("25-emu/cr400af-z", "cr400af-ae-tp-r")
}
spriteset (spriteset_cr400afae_middle_tp_reversed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/cr400af-z", "cr400af-ae-tp")
}
spriteset (spriteset_cr400afae_middle_tp_r_reversed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_reversed ("25-emu/cr400af-z", "cr400af-ae-tp-r")
}



// Vehicle


switch (FEAT_TRAINS, SELF, switch_cr400afae_articulated_part, extra_callback_info1) {
    1..2: return cr400afae;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_head_capacity, position_in_articulated_veh % 3) {
    1: return 32;
    return 0;
}

//GFX


switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_is_tp_front, ((position_in_consist / 3) + 1) - (num_vehs_in_consist / 12) + 1) {
    0: spriteset_cr400afae_middle_tp;
    2: spriteset_cr400afae_middle_m_r;
    3: spriteset_cr400afae_middle_tp_r;
    4..10: spriteset_cr400afae_middle_m_r;
    spriteset_cr400afae_middle_m;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_is_tp_back, ((position_in_consist / 3) + 1) - (num_vehs_in_consist * 3 / 12) + 1) {
    0: spriteset_cr400afae_middle_tp_r_reversed;
    2: spriteset_cr400afae_middle_m_reversed;
    3: spriteset_cr400afae_middle_tp_reversed;
    4..10: spriteset_cr400afae_middle_m_reversed;
    spriteset_cr400afae_middle_m_r_reversed;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_is_tp, ((position_in_consist / 3) + 1) <= (num_vehs_in_consist / 6)) {
    1: switch_cr400afae_if_middle_wagon_is_tp_front;
    switch_cr400afae_if_middle_wagon_is_tp_back;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_middle_wagon_half_long, ((position_in_consist / 3) + 1) == (num_vehs_in_consist / 6)) {
    1: spriteset_cr400afae_middle_m_c;
    spriteset_cr400afae_middle_m_c_reversed;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_middle_wagon_tp_long, (((position_in_consist / 3) + 1) == (num_vehs_in_consist / 6)) || ((position_in_consist / 3) == (num_vehs_in_consist / 6))) {
    1: switch_cr400afae_middle_wagon_half_long;
    switch_cr400afae_if_middle_wagon_is_tp;
}



switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_medium, ((position_in_consist / 3) + 1) - (num_vehs_in_consist / 6) + 1) {
    0: spriteset_cr400afae_middle_tp;
    1: spriteset_cr400afae_middle_m_c;
    2: spriteset_cr400afae_middle_m_c_reversed;
    3: spriteset_cr400afae_middle_tp_reversed;
    4..12: spriteset_cr400afae_middle_m_reversed;
    spriteset_cr400afae_middle_m;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_short_back, (position_in_consist_from_end / 3) + 1) {
    3: spriteset_cr400afae_middle_tp_reversed;
    spriteset_cr400afae_middle_m_reversed;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_short_front, (position_in_consist / 3) + 1) {
    2: spriteset_cr400afae_middle_tp;
    spriteset_cr400afae_middle_m;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_short, ((position_in_consist / 3) + 1) <= (num_vehs_in_consist / 6)) {
    1: switch_cr400afae_if_middle_wagon_tp_short_front;
    switch_cr400afae_if_middle_wagon_tp_short_back;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_length_class, num_vehs_in_consist / 3) {
    2..5:  switch_cr400afae_if_middle_wagon_tp_short;
    6..12: switch_cr400afae_if_middle_wagon_tp_medium;
    switch_cr400afae_middle_wagon_tp_long;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_wagon_end, position_in_consist_from_end == 1) {
    1: spriteset_cr400afz_cab;
    switch_cr400afae_length_class;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_graphics, (position_in_consist_from_end % 3) == 1) {
    1: switch_cr400afae_if_wagon_end;
    empty_sprites;
}



switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_length, position_in_consist_from_end) {
    switch_length_2_8_2;
}

//CAP


switch (FEAT_TRAINS, SELF, switch_cr400afae_middle_capacity_id, vehicle_type_id) {
    1024: return 93;
    1027: return 38;
    1035: return 18;
    1037: return 40;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_middle_capacity, position_in_articulated_veh % 3) {
    1: switch_cr400afae_middle_capacity_id;
    return 0;
}



switch (FEAT_TRAINS, SELF, switch_cr400afae_cab_capacity_id, vehicle_type_id) {
    1024: return 63;
    1027: return 32;
    1035: return 10;
    1037: return 32;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_cab_capacity, position_in_articulated_veh % 3) {
    1: switch_cr400afae_cab_capacity_id;
    return 0;
}



switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_capacity, (position_in_consist < 3) || (position_in_consist_from_end < 3)) {
    0: switch_cr400afae_middle_capacity;
    switch_cr400afae_cab_capacity;
}





switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_running_power, vehicle_type_id) {
    1024: return 63;
    1027: return 32;
    1035: return 10;
    1037: return 32;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_running_unpower, vehicle_type_id) {
    1024: return 63;
    1027: return 32;
    1035: return 10;
    1037: return 32;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_running, vehicle_is_potentially_powered) {
    1: switch_cr400afae_wagon_running_power;
    switch_cr400afae_wagon_running_unpower;
}



//POWER

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_long_pw, position_in_consist % 24) {
    2..5: return 3269;
    9..14: return 3269;
    18..20: return 3269;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_meddium_pw, (((position_in_consist / 3) + 1) == (num_vehs_in_consist / 8)) || (((position_in_consist / 3) - 2) == (num_vehs_in_consist / 8))) {
    0: return 3269;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_if_middle_wagon_tp_short_pw, ((position_in_consist / 3) + 1) == (num_vehs_in_consist / 6)) {
    0: return 3269;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_length_class_pw, num_vehs_in_consist / 3) {
    2..6:   switch_cr400afae_if_middle_wagon_tp_short_pw;
    7..12:  switch_cr400afae_if_middle_wagon_tp_meddium_pw;
    switch_cr400afae_if_middle_wagon_tp_long_pw;
}

switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_power, position_in_consist_from_end) {
    0..2: return 0;
    switch_cr400afae_length_class_pw;
}


switch (FEAT_TRAINS, SELF, switch_cr400afae_wagon_traction, vehicle_is_potentially_powered) {
    1: return int(0.126*255);
    return 0;
}


item (FEAT_TRAINS, cr400afae) {
    property {
        // Menu
        name:                           string(STR_NAME_CR400AFAE);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_MU);
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        variant_group:					9235;

        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(2024,10,01);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   35;
        track_type:                     SABA;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 1;
        loading_speed:                  8 << param_loading_speed;
        cargo_age_period:               720 << param_cargo_decay;

        // Stats
        speed:                          350 km/h;
        power:                          2437.5 kW;
        weight:                         54 ton;
        tractive_effort_coefficient:    0.126;
        cost_factor:                    95;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        running_cost_factor:            84 - 12;//Intelligent EMU
        reliability_decay:              3;
        bitmask_vehicle_info:           bitmask(2);
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_5, string(STR_CR_SLEEPER_CAN_ATTACH_WAGON), string(STR_CR400_Z_NICKNAME), string(STR_RELDEC_VERY_LOW, 3), string(STR_CR400_AB_Z_CONSIST), string(STR_CR400_E_HEAD_SEAT));
        can_attach_wagon:               crsleeperonly;
        start_stop:                     mu4to24car;
        // Graphics
        default:                        switch_cr400afz_graphics;
        purchase:                       spriteset_cr400afz_purchase_original;
        articulated_part:               switch_cr400afae_articulated_part;

        // Stats
        length:                         switch_length_2_8_2;
        cargo_capacity:                 switch_cr400afae_head_capacity;
        power:                          return 0;
        purchase_power:                 return 3269;
        tractive_effort_coefficient:    return 0;
        purchase_tractive_effort_coefficient: return int(0.126*255);
        cargo_age_period:               (160 * cafedecayfactor()) << param_cargo_decay;
        cost_factor:                    95;
        running_cost_factor:            72 * runningcostfactor() * cafecostfactor() + 20;
        purchase_running_cost_factor:   308;
        purchase_cargo_capacity:        32/3;
        name:                           switch_cr400afae_name;

    }

    // Multiple Unit Wagons
    livery_override(zemuw) {
        default:                        switch_cr400afae_wagon_graphics;
        cargo_capacity:                 switch_cr400afae_wagon_capacity;
        power:                          switch_cr400afae_wagon_power;
        tractive_effort_coefficient:    switch_cr400afae_wagon_traction;
        length:                         switch_cr400afae_wagon_length;
        weight:                         54;
        can_attach_wagon:               muhead;
        cargo_age_period:               (switch_crh_wagon_cargo_decay() * cafedecayfactor()) << param_cargo_decay;
        bitmask_vehicle_info:           switch_crh_wagon_bitmask;
        articulated_part:               switch_crh_wagon_articulated_part;
        running_cost_factor:            switch_cr400afae_wagon_running() * runningcostfactor() * cafecostfactor() + accostfactor();
    }
    livery_override(zsmuw) {
        default:                        switch_cr400afae_wagon_graphics;
        cargo_capacity:                 switch_cr400afae_wagon_capacity;
        power:                          switch_cr400afae_wagon_power;
        tractive_effort_coefficient:    switch_cr400afae_wagon_traction;
        length:                         switch_cr400afae_wagon_length;
        weight:                         54;
        can_attach_wagon:               muhead;
        cargo_age_period:               (switch_crh_wagon_cargo_decay() * cafedecayfactor()) << param_cargo_decay;
        bitmask_vehicle_info:           switch_crh_wagon_bitmask;
        articulated_part:               switch_crh_wagon_articulated_part;
        running_cost_factor:            switch_cr400afae_wagon_running() * runningcostfactor() * cafecostfactor() + accostfactor();
    }
    livery_override(wymuw) {
        default:                        switch_cr400afae_wagon_graphics;
        cargo_capacity:                 switch_cr400afae_wagon_capacity;
        power:                          switch_cr400afae_wagon_power;
        tractive_effort_coefficient:    switch_cr400afae_wagon_traction;
        length:                         switch_cr400afae_wagon_length;
        weight:                         54;
        can_attach_wagon:               muhead;
        cargo_age_period:               (32 * 5 * cafedecayfactor()) << param_cargo_decay;
        bitmask_vehicle_info:           switch_crh_wagon_bitmask;
        articulated_part:               switch_crh_wagon_articulated_part;
        running_cost_factor:            switch_cr400afae_wagon_running() * runningcostfactor() * cafecostfactor() + accostfactor();
    }
    livery_override(zecmuw) {
        default:                        switch_cr400afae_wagon_graphics;
        cargo_capacity:                 switch_cr400afae_wagon_capacity;
        power:                          switch_cr400afae_wagon_power;
        tractive_effort_coefficient:    switch_cr400afae_wagon_traction;
        length:                         switch_cr400afae_wagon_length;
        weight:                         54;
        can_attach_wagon:               muhead;
        cargo_age_period:               (160 * cafedecayfactor()) << param_cargo_decay;
        bitmask_vehicle_info:           switch_crh_wagon_bitmask;
        articulated_part:               switch_crh_wagon_articulated_part;
        running_cost_factor:            switch_cr400afae_wagon_running() * runningcostfactor() + 50 + accostfactor(); // IT IS A RESTAURANT CAR!
    }
}

// End CR400AFAE
